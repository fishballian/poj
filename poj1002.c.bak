#include<stdio.h>
#include<stdlib.h>
#include<string.h>

char* normalform(char s[])
{
    int len = strlen(s), i;
    int j = 0;
    for(i = 0; i < len; i++)
    {
        switch(s[i])
        {
            case '0':
                s[j++] = '0';
                break;
            case '1':
                s[j++] = '1';
                break;
            case '2':
            case 'A':
            case 'B':
            case 'C':
                s[j++] = '2';
                break;
            case '3':
            case 'D':
            case 'E':
            case 'F':
                s[j++] = '3';
                break;
            case '4':
            case 'G':
            case 'H':
            case 'I':
                s[j++] = '4';
                break;
            case '5':
            case 'J':
            case 'K':
            case 'L':
                s[j++] = '5';
                break;
            case '6':
            case 'M':
            case 'N':
            case 'O':
                s[j++] = '6';
                break;
            case '7':
            case 'P':
            case 'R':
            case 'S':
                s[j++] = '7';
                break;
            case '8':
            case 'T':
            case 'U':
            case 'V':
                s[j++] = '8';
                break;
            case '9':
            case 'W':
            case 'X':
            case 'Y':
                s[j++] = '9';
                break;
            default:
                break;
        }
    }
    s[j] = '\0';
    if(j != 7)
    {
        printf("error output:%s %d\n", s, j);
        exit(1);
    }
    return s;
}

void print_pn(const char s[])
{
    for(int i = 0; i < 7; i++)
    {
        printf("%c", s[i]);
        if(i == 2)
            printf("-");
    }
}

int cmp(const void *a, const void *b)
{
    return strcmp(*(char**)a, *(char**)b);
}

int main()
{
    int i, n, c, s, p = 0;
    scanf("%d", &n);
    char **array = malloc(n * sizeof(char*));
    for(i = 0; i < n; i++)
    {
        array[i] = malloc(20 * sizeof(char));
        scanf("%s", array[i]);
        normalform(array[i]);
    }
    qsort(array, n, sizeof(char*), cmp);
    for(i = 0; i < n; i++)
    {
        s = i;
        c = 1;
        while(i + 1 < n && strcmp(array[s], array[i + 1]) == 0)
        {
            c++;
            i++;
        }
        if(c > 1)
        {
            print_pn(array[s]);
            printf(" %d\n", c);
            p++;
        }
    }
    if(p == 0)
        printf("No duplicates.\n");
    return 0;
}
